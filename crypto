{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"0vZppWTzJzbF"},"outputs":[],"source":["import os\n","import datetime\n","\n","import IPython\n","import IPython.display\n","import matplotlib as mpl\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","import tensorflow as tf\n","\n","mpl.rcParams['figure.figsize'] = (8, 6)\n","mpl.rcParams['axes.grid'] = False"]},{"cell_type":"code","source":["from google.colab import drive\n","import pathlib\n","drive.mount('/content/drive')\n","drive_dir = pathlib.Path.cwd() / 'drive' / 'My Drive' / 'CryptoTrading' / 'binance_data'\n","print(drive_dir)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3UiDfY_PJ4Wt","executionInfo":{"status":"ok","timestamp":1666500168600,"user_tz":420,"elapsed":18892,"user":{"displayName":"Jia Shuo Zhou","userId":"04669318006565986848"}},"outputId":"e18b87d6-d8b1-4c44-fe74-936e3b90dd92"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n","/content/drive/My Drive/CryptoTrading/binance_data\n"]}]},{"cell_type":"markdown","source":["Data Preprocessing"],"metadata":{"id":"EX_Jts18f0Bo"}},{"cell_type":"code","source":["assets = ['BCHUSDT', 'BNBUSDT', 'BTCUSDT', 'ETCUSDT', 'EOSUSDT',\n","          'ETCUSDT', 'ETHUSDT', 'LTCUSDT', 'TRXUSDT', 'ADAUSDT',\n","          'DOGEUSDT', 'SOLUSDT']"],"metadata":{"id":"dnQZe0E6eStP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df = pd.read_feather(str(drive_dir / 'data_universe_1m.feather'))"],"metadata":{"id":"OVuXWqUci2JO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"5FjzWns1kLLw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df = pd.read_feather(str(drive_dir / 'btc_eth_1m.feather'))\n","df['close_time'] = df['open_time'] + pd.Timedelta(value = 1, unit = 'min')"],"metadata":{"id":"2jr-pbayKPKQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"U3wGoN5XUr9B","executionInfo":{"status":"ok","timestamp":1665906011073,"user_tz":420,"elapsed":6,"user":{"displayName":"Jia Shuo Zhou","userId":"04669318006565986848"}},"outputId":"af58e193-b43c-4793-f3e6-c719596f91d0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Unnamed: 0           open_time    open    high     low   close   volume  \\\n","0           0 2020-01-01 00:00:00  129.12  129.12  128.91  128.97  289.040   \n","1           1 2020-01-01 00:01:00  128.95  129.04  128.93  128.94  695.566   \n","2           2 2020-01-01 00:02:00  128.93  128.97  128.92  128.92  131.902   \n","3           3 2020-01-01 00:03:00  128.97  128.98  128.93  128.96  455.572   \n","4           4 2020-01-01 00:04:00  128.95  128.95  128.76  128.81  866.117   \n","\n","           close_time  quote_volume  count  taker_buy_volume  \\\n","0 2020-01-01 00:01:00   37296.67223     18           155.107   \n","1 2020-01-01 00:02:00   89717.06489     49           284.536   \n","2 2020-01-01 00:03:00   17008.70674     17           107.865   \n","3 2020-01-01 00:04:00   58748.97547     19           306.033   \n","4 2020-01-01 00:05:00  111594.84023     48           273.595   \n","\n","   taker_buy_quote_volume  ignore   symbol  \n","0             20005.44348       0  ETHUSDT  \n","1             36703.77497       0  ETHUSDT  \n","2             13908.75485       0  ETHUSDT  \n","3             39464.28873       0  ETHUSDT  \n","4             35249.08931       0  ETHUSDT  "],"text/html":["\n","  <div id=\"df-b4531e66-12b4-426f-ad30-e3c0fe5957e7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>open_time</th>\n","      <th>open</th>\n","      <th>high</th>\n","      <th>low</th>\n","      <th>close</th>\n","      <th>volume</th>\n","      <th>close_time</th>\n","      <th>quote_volume</th>\n","      <th>count</th>\n","      <th>taker_buy_volume</th>\n","      <th>taker_buy_quote_volume</th>\n","      <th>ignore</th>\n","      <th>symbol</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>2020-01-01 00:00:00</td>\n","      <td>129.12</td>\n","      <td>129.12</td>\n","      <td>128.91</td>\n","      <td>128.97</td>\n","      <td>289.040</td>\n","      <td>2020-01-01 00:01:00</td>\n","      <td>37296.67223</td>\n","      <td>18</td>\n","      <td>155.107</td>\n","      <td>20005.44348</td>\n","      <td>0</td>\n","      <td>ETHUSDT</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>2020-01-01 00:01:00</td>\n","      <td>128.95</td>\n","      <td>129.04</td>\n","      <td>128.93</td>\n","      <td>128.94</td>\n","      <td>695.566</td>\n","      <td>2020-01-01 00:02:00</td>\n","      <td>89717.06489</td>\n","      <td>49</td>\n","      <td>284.536</td>\n","      <td>36703.77497</td>\n","      <td>0</td>\n","      <td>ETHUSDT</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>2020-01-01 00:02:00</td>\n","      <td>128.93</td>\n","      <td>128.97</td>\n","      <td>128.92</td>\n","      <td>128.92</td>\n","      <td>131.902</td>\n","      <td>2020-01-01 00:03:00</td>\n","      <td>17008.70674</td>\n","      <td>17</td>\n","      <td>107.865</td>\n","      <td>13908.75485</td>\n","      <td>0</td>\n","      <td>ETHUSDT</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>2020-01-01 00:03:00</td>\n","      <td>128.97</td>\n","      <td>128.98</td>\n","      <td>128.93</td>\n","      <td>128.96</td>\n","      <td>455.572</td>\n","      <td>2020-01-01 00:04:00</td>\n","      <td>58748.97547</td>\n","      <td>19</td>\n","      <td>306.033</td>\n","      <td>39464.28873</td>\n","      <td>0</td>\n","      <td>ETHUSDT</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>2020-01-01 00:04:00</td>\n","      <td>128.95</td>\n","      <td>128.95</td>\n","      <td>128.76</td>\n","      <td>128.81</td>\n","      <td>866.117</td>\n","      <td>2020-01-01 00:05:00</td>\n","      <td>111594.84023</td>\n","      <td>48</td>\n","      <td>273.595</td>\n","      <td>35249.08931</td>\n","      <td>0</td>\n","      <td>ETHUSDT</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b4531e66-12b4-426f-ad30-e3c0fe5957e7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b4531e66-12b4-426f-ad30-e3c0fe5957e7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b4531e66-12b4-426f-ad30-e3c0fe5957e7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["funcs = {\n","    'open' : 'first',\n","    'close' : 'last',\n","    'low' : np.min, \n","    'high' : np.max, \n","    'volume' : np.sum,\n","    'quote_volume' : np.sum,\n","    'taker_buy_volume' : np.sum,\n","    'taker_buy_quote_volume' : np.sum\n","  }\n","data = df.groupby(['symbol']).resample('5min', on = 'open_time').agg(funcs)\n","data = data.reset_index(drop = False)\n","data['close_time'] = data['open_time'] + pd.Timedelta(value = 5, unit = 'min')\n","data = data.assign(ret_5m = lambda x: (x['close'] / x['open']) - 1)\n","data['target'] = data.groupby(['symbol'])['ret_5m'].shift(-1)"],"metadata":{"id":"nOU6whPkSYpf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"WUnIub5ONbO6","executionInfo":{"status":"ok","timestamp":1665906025201,"user_tz":420,"elapsed":26,"user":{"displayName":"Jia Shuo Zhou","userId":"04669318006565986848"}},"outputId":"fe472690-dea7-4852-9fc9-e0f0a98532f5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    symbol           open_time     open    close      low     high   volume  \\\n","0  BTCUSDT 2020-01-01 00:00:00  7189.43  7175.25  7172.94  7190.52  583.119   \n","1  BTCUSDT 2020-01-01 00:05:00  7174.71  7186.69  7173.28  7186.69  163.860   \n","2  BTCUSDT 2020-01-01 00:10:00  7186.83  7176.26  7175.70  7188.10  290.358   \n","3  BTCUSDT 2020-01-01 00:15:00  7176.22  7173.68  7172.43  7179.41  189.617   \n","4  BTCUSDT 2020-01-01 00:20:00  7173.50  7171.81  7170.69  7176.13  198.838   \n","\n","   quote_volume  taker_buy_volume  taker_buy_quote_volume          close_time  \\\n","0  4.186536e+06           175.877            1.262598e+06 2020-01-01 00:05:00   \n","1  1.176440e+06           127.400            9.147206e+05 2020-01-01 00:10:00   \n","2  2.084984e+06            80.474            5.777864e+05 2020-01-01 00:15:00   \n","3  1.360585e+06            69.584            4.992924e+05 2020-01-01 00:20:00   \n","4  1.426225e+06            46.168            3.311762e+05 2020-01-01 00:25:00   \n","\n","     ret_5m    target  \n","0 -0.001972  0.001670  \n","1  0.001670 -0.001471  \n","2 -0.001471 -0.000354  \n","3 -0.000354 -0.000236  \n","4 -0.000236  0.000050  "],"text/html":["\n","  <div id=\"df-a132ae9b-9759-4f36-9675-18302e24c5dc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>open_time</th>\n","      <th>open</th>\n","      <th>close</th>\n","      <th>low</th>\n","      <th>high</th>\n","      <th>volume</th>\n","      <th>quote_volume</th>\n","      <th>taker_buy_volume</th>\n","      <th>taker_buy_quote_volume</th>\n","      <th>close_time</th>\n","      <th>ret_5m</th>\n","      <th>target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>BTCUSDT</td>\n","      <td>2020-01-01 00:00:00</td>\n","      <td>7189.43</td>\n","      <td>7175.25</td>\n","      <td>7172.94</td>\n","      <td>7190.52</td>\n","      <td>583.119</td>\n","      <td>4.186536e+06</td>\n","      <td>175.877</td>\n","      <td>1.262598e+06</td>\n","      <td>2020-01-01 00:05:00</td>\n","      <td>-0.001972</td>\n","      <td>0.001670</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>BTCUSDT</td>\n","      <td>2020-01-01 00:05:00</td>\n","      <td>7174.71</td>\n","      <td>7186.69</td>\n","      <td>7173.28</td>\n","      <td>7186.69</td>\n","      <td>163.860</td>\n","      <td>1.176440e+06</td>\n","      <td>127.400</td>\n","      <td>9.147206e+05</td>\n","      <td>2020-01-01 00:10:00</td>\n","      <td>0.001670</td>\n","      <td>-0.001471</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>BTCUSDT</td>\n","      <td>2020-01-01 00:10:00</td>\n","      <td>7186.83</td>\n","      <td>7176.26</td>\n","      <td>7175.70</td>\n","      <td>7188.10</td>\n","      <td>290.358</td>\n","      <td>2.084984e+06</td>\n","      <td>80.474</td>\n","      <td>5.777864e+05</td>\n","      <td>2020-01-01 00:15:00</td>\n","      <td>-0.001471</td>\n","      <td>-0.000354</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>BTCUSDT</td>\n","      <td>2020-01-01 00:15:00</td>\n","      <td>7176.22</td>\n","      <td>7173.68</td>\n","      <td>7172.43</td>\n","      <td>7179.41</td>\n","      <td>189.617</td>\n","      <td>1.360585e+06</td>\n","      <td>69.584</td>\n","      <td>4.992924e+05</td>\n","      <td>2020-01-01 00:20:00</td>\n","      <td>-0.000354</td>\n","      <td>-0.000236</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>BTCUSDT</td>\n","      <td>2020-01-01 00:20:00</td>\n","      <td>7173.50</td>\n","      <td>7171.81</td>\n","      <td>7170.69</td>\n","      <td>7176.13</td>\n","      <td>198.838</td>\n","      <td>1.426225e+06</td>\n","      <td>46.168</td>\n","      <td>3.311762e+05</td>\n","      <td>2020-01-01 00:25:00</td>\n","      <td>-0.000236</td>\n","      <td>0.000050</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a132ae9b-9759-4f36-9675-18302e24c5dc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a132ae9b-9759-4f36-9675-18302e24c5dc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a132ae9b-9759-4f36-9675-18302e24c5dc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["data.describe().transpose()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"4d0zC5VWcz3G","executionInfo":{"status":"ok","timestamp":1665906025407,"user_tz":420,"elapsed":229,"user":{"displayName":"Jia Shuo Zhou","userId":"04669318006565986848"}},"outputId":"e365bdab-a5e7-49b6-ec33-c0d122ce3984"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                           count          mean           std        min  \\\n","open                    578880.0  1.580783e+04  1.876379e+04  86.810000   \n","close                   578880.0  1.580786e+04  1.876378e+04  86.670000   \n","low                     578880.0  1.578182e+04  1.873322e+04  84.230000   \n","high                    578880.0  1.583371e+04  1.879424e+04  92.000000   \n","volume                  579456.0  5.862008e+03  1.148903e+04   0.000000   \n","quote_volume            579456.0  2.857567e+07  4.569189e+07   0.000000   \n","taker_buy_volume        579456.0  2.903600e+03  5.764548e+03   0.000000   \n","taker_buy_quote_volume  579456.0  1.419985e+07  2.306049e+07   0.000000   \n","ret_5m                  578880.0  9.819717e-06  2.983112e-03  -0.276239   \n","target                  578878.0  9.827306e-06  2.983114e-03  -0.276239   \n","\n","                                 25%           50%           75%           max  \n","open                    1.663515e+03  5.282255e+03  3.010234e+04  6.880662e+04  \n","close                   1.663527e+03  5.281890e+03  3.010234e+04  6.880550e+04  \n","low                     1.660097e+03  5.260200e+03  3.005910e+04  6.863801e+04  \n","high                    1.666928e+03  5.298985e+03  3.015008e+04  6.919870e+04  \n","volume                  7.575807e+02  2.171168e+03  6.292567e+03  5.782463e+05  \n","quote_volume            4.703603e+06  1.504354e+07  3.432403e+07  2.044266e+09  \n","taker_buy_volume        3.667978e+02  1.049928e+03  3.087665e+03  3.037453e+05  \n","taker_buy_quote_volume  2.257415e+06  7.297312e+06  1.691569e+07  1.189138e+09  \n","ret_5m                 -1.121365e-03  0.000000e+00  1.135695e-03  3.134066e-01  \n","target                 -1.121340e-03  0.000000e+00  1.135695e-03  3.134066e-01  "],"text/html":["\n","  <div id=\"df-9c58e227-52d8-4b57-a9ed-32465ff53345\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>open</th>\n","      <td>578880.0</td>\n","      <td>1.580783e+04</td>\n","      <td>1.876379e+04</td>\n","      <td>86.810000</td>\n","      <td>1.663515e+03</td>\n","      <td>5.282255e+03</td>\n","      <td>3.010234e+04</td>\n","      <td>6.880662e+04</td>\n","    </tr>\n","    <tr>\n","      <th>close</th>\n","      <td>578880.0</td>\n","      <td>1.580786e+04</td>\n","      <td>1.876378e+04</td>\n","      <td>86.670000</td>\n","      <td>1.663527e+03</td>\n","      <td>5.281890e+03</td>\n","      <td>3.010234e+04</td>\n","      <td>6.880550e+04</td>\n","    </tr>\n","    <tr>\n","      <th>low</th>\n","      <td>578880.0</td>\n","      <td>1.578182e+04</td>\n","      <td>1.873322e+04</td>\n","      <td>84.230000</td>\n","      <td>1.660097e+03</td>\n","      <td>5.260200e+03</td>\n","      <td>3.005910e+04</td>\n","      <td>6.863801e+04</td>\n","    </tr>\n","    <tr>\n","      <th>high</th>\n","      <td>578880.0</td>\n","      <td>1.583371e+04</td>\n","      <td>1.879424e+04</td>\n","      <td>92.000000</td>\n","      <td>1.666928e+03</td>\n","      <td>5.298985e+03</td>\n","      <td>3.015008e+04</td>\n","      <td>6.919870e+04</td>\n","    </tr>\n","    <tr>\n","      <th>volume</th>\n","      <td>579456.0</td>\n","      <td>5.862008e+03</td>\n","      <td>1.148903e+04</td>\n","      <td>0.000000</td>\n","      <td>7.575807e+02</td>\n","      <td>2.171168e+03</td>\n","      <td>6.292567e+03</td>\n","      <td>5.782463e+05</td>\n","    </tr>\n","    <tr>\n","      <th>quote_volume</th>\n","      <td>579456.0</td>\n","      <td>2.857567e+07</td>\n","      <td>4.569189e+07</td>\n","      <td>0.000000</td>\n","      <td>4.703603e+06</td>\n","      <td>1.504354e+07</td>\n","      <td>3.432403e+07</td>\n","      <td>2.044266e+09</td>\n","    </tr>\n","    <tr>\n","      <th>taker_buy_volume</th>\n","      <td>579456.0</td>\n","      <td>2.903600e+03</td>\n","      <td>5.764548e+03</td>\n","      <td>0.000000</td>\n","      <td>3.667978e+02</td>\n","      <td>1.049928e+03</td>\n","      <td>3.087665e+03</td>\n","      <td>3.037453e+05</td>\n","    </tr>\n","    <tr>\n","      <th>taker_buy_quote_volume</th>\n","      <td>579456.0</td>\n","      <td>1.419985e+07</td>\n","      <td>2.306049e+07</td>\n","      <td>0.000000</td>\n","      <td>2.257415e+06</td>\n","      <td>7.297312e+06</td>\n","      <td>1.691569e+07</td>\n","      <td>1.189138e+09</td>\n","    </tr>\n","    <tr>\n","      <th>ret_5m</th>\n","      <td>578880.0</td>\n","      <td>9.819717e-06</td>\n","      <td>2.983112e-03</td>\n","      <td>-0.276239</td>\n","      <td>-1.121365e-03</td>\n","      <td>0.000000e+00</td>\n","      <td>1.135695e-03</td>\n","      <td>3.134066e-01</td>\n","    </tr>\n","    <tr>\n","      <th>target</th>\n","      <td>578878.0</td>\n","      <td>9.827306e-06</td>\n","      <td>2.983114e-03</td>\n","      <td>-0.276239</td>\n","      <td>-1.121340e-03</td>\n","      <td>0.000000e+00</td>\n","      <td>1.135695e-03</td>\n","      <td>3.134066e-01</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9c58e227-52d8-4b57-a9ed-32465ff53345')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9c58e227-52d8-4b57-a9ed-32465ff53345 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9c58e227-52d8-4b57-a9ed-32465ff53345');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["column_indices = {name: i for i, name in enumerate(data.columns)}\n","\n","unique_dates = data['open_time'].unique()\n","n = 0.7\n","train_idx = int(n * len(unique_dates))\n","train_dates = unique_dates[:train_idx]\n","valid_dates = unique_dates[train_idx:int(0.9 * len(unique_dates))]\n","test_dates = unique_dates[int(0.9*len(unique_dates)):]\n","num_features = data.shape[1]\n","\n","print(f'Last Train date is: {min(train_dates), max(train_dates)}')\n","print(f'Valid Period is from: {min(valid_dates), max(valid_dates)}')\n","print(f'Test Period is from: {min(test_dates), max(test_dates)}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tHG1bMQ-daiZ","executionInfo":{"status":"ok","timestamp":1665906031801,"user_tz":420,"elapsed":1262,"user":{"displayName":"Jia Shuo Zhou","userId":"04669318006565986848"}},"outputId":"70700ef1-7eda-4f65-b970-ce69843d20e7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Last Train date is: (numpy.datetime64('2020-01-01T00:00:00.000000000'), numpy.datetime64('2021-12-07T07:05:00.000000000'))\n","Valid Period is from: (numpy.datetime64('2021-12-07T07:10:00.000000000'), numpy.datetime64('2022-06-27T02:15:00.000000000'))\n","Test Period is from: (numpy.datetime64('2022-06-27T02:20:00.000000000'), numpy.datetime64('2022-10-05T23:55:00.000000000'))\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"KsgqHOKagSlW"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Util for subsampling"],"metadata":{"id":"dZrQHNRzgUVs"}},{"cell_type":"code","source":["class WindowGenerator():\n","  def __init__(self, input_width, label_width, shift,\n","               train_df, val_df, test_df,\n","               label_columns=None):\n","    # Store the raw data.\n","    self.train_df = train_df\n","    self.val_df = val_df\n","    self.test_df = test_df\n","\n","    # Work out the label column indices.\n","    self.label_columns = label_columns\n","    if label_columns is not None:\n","      self.label_columns_indices = {name: i for i, name in\n","                                    enumerate(label_columns)}\n","    self.column_indices = {name: i for i, name in\n","                           enumerate(train_df.columns)}\n","\n","    # Work out the window parameters.\n","    self.input_width = input_width\n","    self.label_width = label_width\n","    self.shift = shift\n","\n","    self.total_window_size = input_width + shift\n","\n","    self.input_slice = slice(0, input_width)\n","    self.input_indices = np.arange(self.total_window_size)[self.input_slice]\n","\n","    self.label_start = self.total_window_size - self.label_width\n","    self.labels_slice = slice(self.label_start, None)\n","    self.label_indices = np.arange(self.total_window_size)[self.labels_slice]\n","\n","  def __repr__(self):\n","    return '\\n'.join([\n","        f'Total window size: {self.total_window_size}',\n","        f'Input indices: {self.input_indices}',\n","        f'Label indices: {self.label_indices}',\n","        f'Label column name(s): {self.label_columns}'])\n","\n","  def split_window(self, features):\n","      inputs = features[:, self.input_slice, :]\n","      labels = features[:, self.labels_slice, :]\n","      if self.label_columns is not None:\n","          labels = tf.stack(\n","              [labels[:, :, self.column_indices[name]] for name in self.label_columns],\n","              axis=-1)\n","\n","      inputs.set_shape([None, self.input_width, None])\n","      labels.set_shape([None, self.label_width, None])\n","\n","      return inputs, labels"],"metadata":{"id":"i5Z7VYYTKvvL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["w1 = WindowGenerator(input_width=24, label_width=1, shift=24,\n","                     label_columns=['ret_5m'], train_df = train_df, val_df = valid_df, test_df = test_df)\n","w1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"05a6UKHVa_PF","executionInfo":{"status":"ok","timestamp":1665356517549,"user_tz":420,"elapsed":242,"user":{"displayName":"Jia Shuo Zhou","userId":"04669318006565986848"}},"outputId":"152a32c0-cba8-44f6-97c4-79ceaf363464"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Total window size: 48\n","Input indices: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23]\n","Label indices: [47]\n","Label column name(s): ['ret_5m']"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":[],"metadata":{"id":"R94fw0Epd26y"},"execution_count":null,"outputs":[]}]}